setwd("~/Documents/gpu_scheduler/tests/container_links")
source('~/Documents/gpu_scheduler/tests/container_links/dc_graphs.R', echo=TRUE)
library(ggplot2)
library(tidyverse)
#Make a loop for pod50 and 100
pallet <- c("#358359FF","#E5BA3AFF","#D86C4FFF" )
setwd(getwd())
names <- c("0","50","100")
metrics <- c("algorithm","clock","server-frag","server-load-cpu","server-load-ram","link-frag","link-load","bw")
metrics_labels <- c("","","Servers Fragmentation","Server Load CPU","Server Load RAM", "Link Fragmentation","Link Load","bw")
name="server-frag"
metrics_index=3
data1 <- read.table(sprintf("dc/pod%s-bw1.json",name), sep=" ")
data1$bw <- "<=01Mbps"
data2 <- read.table(sprintf("dc/pod%s-bw25.json",name), sep= " ")
data2$bw <- "<=25Mbps"
data3 <- read.table(sprintf("dc/pod%s-bw50.json",name), sep= " ")
data3$bw <- "<=50Mbps"
all <- rbind(data1, data2)
all <- rbind(all, data3)
names(all) <- metrics
View(all)
View(all)
View(all)
data1 <- read.table(sprintf("dc/pod%s-bw1.json",name), sep=" ")
data1$bw <- "<=01Mbps"
data2 <- read.table(sprintf("dc/pod%s-bw25.json",name), sep= " ")
data2$bw <- "<=25Mbps"
data3 <- read.table(sprintf("dc/pod%s-bw50.json",name), sep= " ")
data3$bw <- "<=50Mbps"
data1 <- read.table(sprintf("./dc/pod%s-bw1.json",name), sep=" ")
setwd("~/Documents/gpu_scheduler/tests/container_links/dc")
setwd("~/Documents/gpu_scheduler/tests/container_links")
data1 <- read.table(sprintf("./dc/pod%s-bw1.json",name), sep=" ")
name = "0"
data1 <- read.table(sprintf("./dc/pod%s-bw1.json",name), sep=" ")
data1$bw <- "<=01Mbps"
data2 <- read.table(sprintf("dc/pod%s-bw25.json",name), sep= " ")
data3 <- read.table(sprintf("dc/pod%s-bw50.json",name), sep= " ")
data3$bw <- "<=50Mbps"
all <- rbind(data1, data2)
all <- rbind(all, data3)
all <- rbind(data1, data2)
View(data2)
data2$bw <- "<=25Mbps"
all <- rbind(data1, data2)
all <- rbind(all, data3)
all <- rbind(all, data3)
names(all) <- metrics
View(all)
data1 <- read.table(sprintf("./dc/pod%s-bw1.json",name), sep=" ")
all%algorithm
all$algorithm
split(all,all$algorithm)
test <- split(all,all$algorithm)
View(test)
all$algorithm=="ahpg"
test<-all$algorithm=="ahpg"
test <- split(all,all$algorithm)
for i in test{}
for(i in test){}
View(i)
source('~/Documents/gpu_scheduler/tests/container_links/dc_graphs.R', echo=TRUE)
source('~/Documents/gpu_scheduler/tests/container_links/dc_graphs.R', echo=TRUE)
source('~/Documents/gpu_scheduler/tests/container_links/dc_graphs.R', echo=TRUE)
source('~/Documents/gpu_scheduler/tests/container_links/dc_graphs.R', echo=TRUE)
all
all[1]
all[[1]]
all[[,1]]
all[[1]]
all[[1]][1]
all[[1]][1][1]
all[[1]][1]
all[[1]][2]
all[1][2]
all[1][1]
all[1][2]
all[2][1]
all[[1]][1]
all$algorithm[1]
all$algorithm[1,1]
all$algorithm[1]
all$algorithm[2]
all$algorithm[3]
all$algorithm[100]
all$algorithm[1000]
all$algorithm[1,1]
all$algorithm[1,2]
source('~/Documents/gpu_scheduler/tests/container_links/dc_graphs.R', echo=TRUE)
source('~/Documents/gpu_scheduler/tests/container_links/dc_graphs.R', echo=TRUE)
source('~/Documents/gpu_scheduler/tests/container_links/dc_graphs.R', echo=TRUE)
source('~/Documents/gpu_scheduler/tests/container_links/dc_graphs.R', echo=TRUE)
source('~/Documents/gpu_scheduler/tests/container_links/dc_graphs.R', echo=TRUE)
source('~/Documents/gpu_scheduler/tests/container_links/container_graphs.R', echo=TRUE)
source('~/Documents/gpu_scheduler/tests/container_links/container_graphs.R', echo=TRUE)
source('~/Documents/gpu_scheduler/tests/container_links/container_graphs.R', echo=TRUE)
source('~/Documents/gpu_scheduler/tests/container_links/container_graphs.R', echo=TRUE)
source('~/Documents/gpu_scheduler/tests/container_links/container_graphs.R', echo=TRUE)
source('~/Documents/gpu_scheduler/tests/container_links/container_graphs.R', echo=TRUE)
